download.packages(tidyverse)
library(tidyverse)
wifi_data->read.csv("Aggregated_Reps_Wifi.csv")
wifi_data->read.csv("Aggregated_Reps_Wifi.csv")
wifi_data->read.csv("./Aggregated_Reps_Wifi.csv")
wifi_data->read.csv("./Aggregated_Reps_Wifi.csv")
wifi_data<-read_csv("Aggregated_Reps_Wifi.csv",header = TRUE)
wifi_data<-read_csv("Aggregated_Reps_Wifi.csv")
View(wifi_data)
wifi_data
head(wifi_data)
tail(wifi_data)
tail(wifi_data)
summary(wifi_data)
lapply(wifi_data, is.numeric)
#check if the column data is numeric
unlist(lapply(wifi_data, is.numeric))
#get the numeric columns
num_cols<-colnames(wifi_data)[unlist(lapply(wifi_data, is.numeric))]
num_cols
mapply(hist,wifi_data[num_cols],main=paste('Distribution of',num_cols))
mapply(hist,wifi_data[num_cols],main=paste('Distribution of',num_cols),xlab=num_cols)
num_cols<-colnames(wifi_data)[unlist(lapply(wifi_data, is.numeric))]-wifi_data[workerTime]
#get the numeric columns
num_cols<-colnames(wifi_data)[unlist(lapply(wifi_data, is.numeric))]-wifi_data$workerTime
num_cols<-colnames(wifi_data)[unlist(lapply(wifi_data, is.numeric))]-workerTime
num_cols<-colnames(wifi_data)[unlist(lapply(wifi_data, is.numeric))]
num_cols
num_cols[-3]
mapply(hist,wifi_data[new_num_cols],main=paste('Distribution of',num_cols),xlab=new_num_cols)
mapply(hist,wifi_data[num_cols],main=paste('Distribution of',num_cols),xlab=new_num_cols)
par(mfrow=c(3,4))
mapply(hist,wifi_data[num_cols],main=paste('Distribution of',num_cols),xlab=num_cols)
wifi_data
mapply(hist,wifi_data[plot_cols],main=paste('Distribution of',plot_cols),xlab=plot_cols)
wifi_data<-wifi_data %>%
mutate(batterystats_Joule_calculated_log = log(batterystats_Joule_calculated),
batterystats_Joule_calculated_sqrt = sqrt(batterystats_Joule_calculated),
batterystats_Joule_calculated_reciprocal = 1/batterystats_Joule_calculated)
wifi_data
plot_cols<-c('batterystats_Joule_calculated','batterystats_Joule_calculated_log',
'batterystats_Joule_calculated_sqrt','batterystats_Joule_calculated_reciprocal')
mapply(hist,wifi_data[plot_cols],main=paste('Distribution of',plot_cols),xlab=plot_cols)
check_normality<-function(data){
plot(density(data))
qqnorm(data)
shapiro.test(data)
}
wifi_data$downloadTime %>%
check_normality
check_normality
check_normality<-function(data){
plot(density(data))
qqnorm(data)
shapiro.test(data)
}
wifi_data$downloadTime %>%
check_normality
check_normality<-function(data){
plot(density(data))
qqplot(data)
shapiro.test(data)
}
wifi_data$downloadTime %>%
check_normality
check_normality<-function(data){
plot(density(data))
wifi::qqplot(data)
shapiro.test(data)
}
wifi_data$downloadTime %>%
check_normality
check_normality<-function(data){
plot(density(data))
car::qqplot(data)
shapiro.test(data)
}
wifi_data$downloadTime %>%
check_normality
check_normality<-function(data){
plot(density(data))
qqnorm(data)
shapiro.test(data)
}
wifi_data$downloadTime %>%
check_normality
check_normality<-function(data){
plot(density(data))
qqnorm(data)
qqline(data, col=2, lwd=2)
shapiro.test(data)
}
wifi_data$downloadTime %>%
check_normality
check_normality<-function(data){
plot(density(data))
qqnorm(data)
car::qqPlot(data)
#qqline(data, col=2, lwd=2)
shapiro.test(data)
}
wifi_data$downloadTime %>%
check_normality
check_normality<-function(data){
plot(density(data))
qqnorm(data)
car::qqPlot(data)
#qqline(data, col=2, lwd=2)
shapiro.test(data)
}
wifi_data$batterystats_Joule_calculated %>%
check_normality
wifi_data$batterystats_Joule_calculated_log %>%
check_normality()
